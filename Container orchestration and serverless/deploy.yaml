apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 3
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: docker.io/cse4100/kubernetes-custom-nginx:1.0
          resources:
            limits:
              cpu: 100m
              memory: 16Mi
          volumeMounts:
            - name: secret-volume
              mountPath: '/etc/nginx/htpasswd'
              subPath: htpasswd
            - name: nginx-config-volume
              mountPath: '/etc/nginx/conf.d/default.conf'
              subPath: default.conf
      volumes:
        - name: secret-volume
          secret:
            secretName: nginx-auth
        - name: nginx-config-volume
          configMap:
            name: nginx-config
            items:
              - key: default.conf
                path: default.conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    # You found me, well done!
    # Now, just add basic authentication...
    server {
      listen 80;
      root /usr/share/nginx/html;

      error_page   500 502 503 504  /50x.html;

      location / {
          auth_basic "Restricted Content";
          auth_basic_user_file /etc/nginx/htpasswd;
      }

      location /public {
        auth_basic off;
        root /usr/share/nginx;
      }
    }

---
apiVersion: v1
kind: Service
metadata:
  name: css-secret-web-server
spec:
  type: LoadBalancer
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
